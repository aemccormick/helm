{{- /* Aembit Agent Injector Secret for TLS communication */ -}}

# The number of days for which this Helm generated certificate will be valid
# Note: The Helm chart will need to be upgraded/reinstalled prior to this expiration
#   Upgrading will replace the certificate and configuration so that no downtime is required
{{ $validDays := .Values.agentInjector.certificate.validDays | int }}

# The common name of the TLS certificate to be generated by Helm and used for the Agent Injector WebHook
# Note: This likely will always be "aembit-agent-injector.{{ .Release.Namespace }}.svc",
#   but there may be Kubernetes configurations which alter this standard.
{{ $commonName := tpl .Values.agentInjector.certificate.commonName . }}

# Generate the CA and Self Signed Certificate based on the Common Name and Valid Period
{{ $aembitCA := genCA $commonName $validDays }}
{{ $aembitCert := genSignedCert $commonName nil (list $commonName) $validDays $aembitCA }}

# Convert the TLS CA, Certificate, and Key to Base64 for storage in Kubernetes Secret
{{ $aembitCACert := $aembitCA.Cert | b64enc }}
{{ $aembitCertKey := $aembitCert.Key | b64enc }}
{{ $aembitCertCert := $aembitCert.Cert | b64enc }}

# If configured (default), store the Helm generated certificate in the Aembit Injector Secret
{{ if .Values.agentInjector.certificate.create }}
apiVersion: v1
kind: Secret
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
  labels:
    aembit.io/component: aembit-agent-injector
    app.kubernetes.io/name: aembit-agent-injector
    app.kubernetes.io/part-of: aembit
    app.kubernetes.io/component: agent-injector
  name: {{ $commonName | quote }}
type: kubernetes.io/tls
data:
  tls.crt: {{ $aembitCertCert | quote }}
  tls.key: {{ $aembitCertKey | quote }}
  ca.crt:  {{ $aembitCACert | quote }}
{{ end }}
---
#
# Aembit Agent Injector Deployment
#
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
  labels:
    aembit.io/component: aembit-agent-injector
    app.kubernetes.io/name: aembit-agent-injector
    app.kubernetes.io/part-of: aembit
    app.kubernetes.io/component: agent-injector
  name: aembit-agent-injector
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: aembit-agent-injector
  template:
    metadata:
      labels:
        aembit.io/component: aembit-agent-injector
        app.kubernetes.io/name: aembit-agent-injector
      annotations:
        aembit.io/webhook-checksum: {{ $aembitCert.Cert | sha256sum }}  # Force a restart if the Certificate changes
      {{ if .Values.agentInjector.metrics.enabled }}  
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9090"       
      {{ end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - image: {{ .Values.agentInjector.image }}
          imagePullPolicy: {{ .Values.agentInjector.pullPolicy }}
          name: aembit-agent-injector
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.agentInjector.port }}
              scheme: HTTPS
            failureThreshold: 3
            periodSeconds: 5
            timeoutSeconds: 2
            initialDelaySeconds: 5
          resources:
            requests:
              memory: {{ .Values.agentInjector.memRequest }}
              cpu: {{ .Values.agentInjector.cpuRequest }}
            limits:
              memory: {{ .Values.agentInjector.memLimit }}
              cpu: {{ .Values.agentInjector.cpuLimit }}
          env:
            - name: CRT_PATH
              value: "/etc/webhook/tls/tls.crt"
            - name: KEY_PATH
              value: "/etc/webhook/tls/tls.key"
            - name: INJECT_INIT_CONTAINERS_JSON
              value: {{ include "webhook.inject.init-containers-json" . }}
            - name: INJECT_CONTAINERS_JSON
              value: {{ include "webhook.inject.containers-json" . }}
            - name: PORT
              value: {{ .Values.agentInjector.port | quote }}
            - name: HOST
              value: {{ .Values.agentInjector.host }}
            - name: AEMBIT_METRICS_ENABLED
              value: {{ .Values.agentInjector.metrics.enabled | quote }}
            - name: AEMBIT_AGENT_PROXY_METRICS_ENABLED
              value: {{ .Values.agentProxy.metrics.enabled | quote }}              
            {{- if kindIs "map" .Values.agentInjector.env }}
              {{- range $key, $val := .Values.agentInjector.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
              {{- end }}
            {{- else if kindIs "slice" .Values.agentInjector.env }}
              {{- range .Values.agentInjector.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
              {{- end }}
            {{- end }}
          volumeMounts:
            - name: tls
              mountPath: "/etc/webhook/tls"
              readOnly: true
          ports:
            - containerPort: 443
            - containerPort: 9090              
      volumes:
        - name: tls
          secret:
            secretName: {{ $commonName | quote }}
---
#
# Aembit Agent Injector Service
#
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
  labels:
    aembit.io/component: aembit-agent-injector
    app.kubernetes.io/name: aembit-agent-injector
    app.kubernetes.io/part-of: aembit
    app.kubernetes.io/component: agent-injector
  name: aembit-agent-injector
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: {{ .Values.agentInjector.port }}
  selector:
    app.kubernetes.io/name: aembit-agent-injector
---
#
# Aembit Agent Injector Webhook Configuration
#
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  labels:
    aembit.io/component: aembit-agent-injector
    app.kubernetes.io/name: aembit-agent-injector
    app.kubernetes.io/part-of: aembit
    app.kubernetes.io/component: agent-injector
  name: "aembit-agent-injector.{{ .Release.Namespace }}.aembit.io"
webhooks:
  - name: "aembit-agent-injector.{{ .Release.Namespace }}.aembit.io"
    failurePolicy: {{ .Values.agentInjector.failurePolicy }}
    objectSelector:
      matchExpressions:
        - key: aembit.io/component
          operator: NotIn
          # The aembit- prefixes are the current values. The no-prefix values
          # are older values that need to be matched for a while to provide a
          # smooth upgrade to the new labels.
          values: ["agent-controller", "agent-injector", "aembit-agent-controller", "aembit-agent-injector"]
    {{ if .Values.agentInjector.filters.namespaces }}
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: In
          values:
          {{ range .Values.agentInjector.filters.namespaces }}
            - {{ . | quote }}
          {{ end }}
    {{ end }}
    rules:
      - apiGroups: ["*"]
        apiVersions: ["v1"]
        operations: ["CREATE"]
        resources: ["pods"]
        scope: "Namespaced"
    clientConfig:
      service:
        namespace: {{ .Release.Namespace }}
        name: aembit-agent-injector
        path: /mutate
        port: 443
      caBundle: {{ $aembitCACert }}
    admissionReviewVersions: ["v1"]
    sideEffects: None
    timeoutSeconds: {{ .Values.agentInjector.timeoutSeconds }}
